/** * @author	borella*/package com.duff.core{		import flash.display.MovieClip;	import flash.events.Event;	import signals.AppSignal;		import com.duff.core.Configs;	import com.duff.utils.FlashVar;	import com.duff.signals.ConfigsSignals;	import com.duff.log.Logger;	import com.duff.signals.DisplaySignals;			public class AbstractApp extends MovieClip 	{				//____________________________________________________________________ VARS				public var _init:Boolean = false;				// ___________________________________________________________________ CONSTRUCTOR				public function AbstractApp():void 		{			if(Configs.hasInit) init(true);			 else setupApp();		}				// ___________________________________________________________________ PROTECTED METHODS				protected function start():void 		{			Logger.error("[com.duff.core.AbstractApp.as] start()");			throw new Error("[com.duff.core.AbstractApp.as] start()");		}				// ___________________________________________________________________ PRIVATE METHODS				protected function init(hasInit:Boolean=false):void 		{				AppSignal._APP_READY.addOnce(start);			if (!hasInit) AppSignal._APP_READY.dispatch();		}				private function setupApp():void		{			//--- get appConfig.xml path			var _flashVar:String = FlashVar.getValue("config", this.stage);			var pathXml:String  =  _flashVar  ==  null || _flashVar  ==  ""  ?  Paths._XML_DEFAULT  :  _flashVar;						Configs._FINISHED.addOnce(init);			Configs.init(pathXml, this.stage, MovieClip(this));					}					}}