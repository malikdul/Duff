package com.duff.utils{	public class StringUtil	{				public static function getNumbersFromString(source:String):String		{			var pattern:RegExp = /[^0-9]/g;			return source.replace(pattern, '');		}				public static function getLettersFromString(source:String):String		{			var pattern:RegExp = /[^A-Z^a-z]/g;			return source.replace(pattern, '');		}				public static function xtrim(str:String = null):String		{			str = (!str) ? "" : str;			var o:String = new String();			var TAB:Number = 9;			var LINEFEED:Number = 10;			var CARRIAGE:Number = 13;			var SPACE:Number = 32;			for (var i:int = 0; i < str.length; i++)			{				if (str.charCodeAt(i) != SPACE && str.charCodeAt(i) != CARRIAGE && str.charCodeAt(i) != LINEFEED && str.charCodeAt(i) != TAB)				{					o += str.charAt(i);				}			}			return o;		}				public static function toTitleCase(str:String):String		{			var lstr:String = str.toLowerCase();			return lstr.replace(/\b([a-z])/g, function($0:*):*				{					return $0.toUpperCase();				});		}				public static function toSingleQuote(str:String):String		{			var sq:String = "'";			var dq:String = String.fromCharCode(34);			return str.split(dq).join(sq);		}				public static function search(str:String, key:String, caseSensitive:Boolean = true):Boolean		{			if (!caseSensitive)			{				str = str.toUpperCase();				key = key.toUpperCase();			}			return (str.indexOf(key) <= -1) ? false : true;		}					}}